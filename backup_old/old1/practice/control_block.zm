/******************************************************************************\
FILE:           practice_block.zm
AUTHOR:         Chris van Run <C.P.A.vanRun@uu.nl>
ADAPTED BY:     -

DESCRIPTION: Contains the practice_block

HISTORY:
2014-08-19 CvR   Created.

\******************************************************************************/

requires 1.10;


Block practice_block
{
    on_event:entry()
    {           
        num_cycles = 4;
    }

    Block sub_blocks
    {
        on_event:entry()
        {
            num_cycles = 11;
        }

        Block sub_block
        {
          Part soundstim
          {
            on_event:entry()
            {
                print("sound+");
                signal(this, 1);
            }
          }

          Part question 
          {
            on_event:entry()
            {
              println("question");
              signal(this, 1);
            }
          }
        }
    }

    Part
    {
        on_event:entry()
        {
            if(practice_block.cycle != practice_block.num_cycles-1)
                {
                    println("sub_block pause");
                }
            signal(this, CONTINUE);
        }
    }
}
	
	 // Part
  //   {
  //       on_event:entry()
  //       {
  //           blank_page.action_auto(this, 500ms);
  //       }
  //   }
    
//      Part final_instructions
//     {
//         on_event:entry()
//         {
// //            pause_page.set_text_size(1000, 600);

//             pause_repeat_continue_page.set_text(FINAL_INSTRUCTION_TEXT, true);
//             pause_repeat_continue_page.action(this, 0s, -1s, 500ms, true, 2s, practice_block);
//             control.button_box.enable_all_buttons(CONTINUE);
//         }
        
//         on_event:exit()
//         {
// 			// clean up
// 			control.button_box.disable_buttons();
// 		}
//     }
//}


void action(Part caller)
{
    // Activate the task. When the task is done, the registered caller
    // (c.q. the main experiment object) will automatically be signalled.
    practice_block.enter(caller);
}
